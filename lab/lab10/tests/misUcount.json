{"countData": {"scmconswithlstmakesmallst": 2, "scmlstreductionmisapplied-schemelistformat": 1, "scmconsrtnlstwhenshouldbemallst-schememalformedlist": 2, "correct": 2, "scmquotedcodeiseval-schemequotedlist": 2, "scmquotedcodeiseval": 2, "scmlstdispnotfullyreduced": 3, "scmconsrtnlstwhenshouldbemallst-schemecons": 2, "scmconswithlstmakesnestedlst": 1, "scmmallstislst": 1, "scmconswithlstmakesnestedlst-schemecons": 1, "scmmallstdsntneedspaces": 1, "scmconswithlstmakesmallst-schemecons": 2, "scmlstdispnotfullyreduced-schemelistformat": 3, "scmconsrtnlstwhenshouldbemallst": 2, "scmlstreductionmisapplied": 1, "scmmallstdsntneedspaces-schemelistformat": 1, "scmmallstislst-schememalformedlist": 1}, "answerDict": {"scm> (list 1 (cons 2 3))\nLOCKED_ANSWER\n": ["['(1 (2 3))']"], "scm> (cons 1 (cons 2 nil))\nLOCKED_ANSWER\n": ["['(1 . (2 . ()))']", "['(1 (2 ()))']", "['(1 (2))']", "['(1 (2 ))']"], "scm> '(2 . (3))\nLOCKED_ANSWER\n": ["['(2 . (3))']", "['(2 (3))']"], "scm> (cons 1 '(list 2 3))\nLOCKED_ANSWER\n": ["['(1 . (2 3))']", "['(1 . 2 3)']", "['(1 . (list 2 3)']", "['(1 . (list 2 3))']", "['(1 (list 2 3))']"], "scm> (cons 1 2)\nLOCKED_ANSWER\n": ["['(1.2)']", "['((1)) 2)']", "['((1) 2)']", "['(1 2)']", "['((1 2) ())']", "['((1 2) )']"], "scm> (eq? '(1 . (2 . 3)) (cons 1 (cons 2 3)))\nLOCKED_ANSWER\n": ["['False']"], "scm> (eq? '(1 . (2 . 3)) (list 1 (cons 2 3)))\nLOCKED_ANSWER\n": ["['True']"], "scm> (eq? '(1 . (2 . 3)) (cons 1 (cons 2 (cons 3 nil))))\nLOCKED_ANSWER\n": ["['false']", "['true]']", "['true']", "['#t']", "['#f']", "['no']"]}}